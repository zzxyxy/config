---
- name: Raspberry base
  hosts:
    - Gateway
    - HellaNode01
    - Freya
#    - Thyri

  vars:
    deb_architecture: {
      "aarch64": "arm64",
      "x86_64": "amd64"
    }

  pre_tasks:
    - name: Set hostname
      become: true
      ansible.builtin.hostname:
        name: "{{ hostname }}"

    - name: Pre Install packages
      become: true
      ansible.builtin.apt:
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - curl

    - name: Docker key
      become: true
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 644

    - name: Docker repo
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable"
        state: present
        filename: docker
        mode: 644

    - name: Update and upgrade apt packages
      become: true
      ansible.builtin.apt:
        upgrade: true
        update_cache: true

  tasks:
    - name: Install packages
      become: true
      ansible.builtin.apt:
        state: present
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - fail2ban
          - git
          - screen
          - snapd
          - sshfs
          - syslog-ng
          - make
          - mc
          - net-tools
          - prometheus-node-exporter
          - python3
          - python3-docker
          - rsync
          - vim
          - nano

    - name: Install microk8s packages
      become: true
      community.general.snap:
        name: microk8s
        state: present
        classic: true
      when: zxyxy_kubernetes is defined

    - name: Remove microk8s packages
      become: true
      community.general.snap:
        name: microk8s
        state: absent
      when: zxyxy_kubernetes is undefined

    - name: Copy sshd jail config
      become: true
      ansible.builtin.copy:
        src: "files/Hella/sshd.local"
        dest: /etc/fail2ban/jail.d/sshd.local
        owner: root
        group: root
        mode: '0770'
      notify: Fail2ban service restart

    - name: Fail2ban log setting
      become: true
      ansible.builtin.lineinfile:
        path: /etc/fail2ban/fail2ban.conf
        regexp: '^logtarget'
        line: "logtarget = SYSTEMD-JOURNAL"
        owner: root
        group: root
        mode: '0744'
      notify: Fail2ban service restart

  handlers:
    - name: Fail2ban service restart
      become: true
      ansible.builtin.service:
        name: fail2ban
        state: restarted
        enabled: true

- name: Manage Hella
  hosts:
    - HellaMaster

  tasks:
    - name: Create /root/bin
      become: true
      ansible.builtin.file:
        path: /root/bin
        state: directory
        mode: "0755"

# DUCKDNS
    - name: Copy duck script
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/duck.sh"
        dest: /root/bin/duck.sh
        owner: root
        group: root
        mode: '0700'


    - name: Duckdns schedule
      become: true
      ansible.builtin.cron:
        name: "Duckdns"
        minute: "*/15"
        job: "bash /root/bin/duck.sh >/dev/null 2>&1"

#    - name: Copy syslog-ng config
#      become: true
#      ansible.builtin.copy:
#        src: files/{{ hostname }}/syslog-ng.conf
#        dest: /etc/syslog-ng/syslog-ng.conf
#        owner: root
#        group: root
#        mode: '0755'
#      notify: Restart syslog-ng

- name: Manage Freya
  hosts:
    - Freya

  vars:
    dockercomposerpath: /srv/docker

  pre_tasks:
    - name: Install packages
      become: true
      ansible.builtin.apt:
        state: present
        name:
          - build-essential
          - make
          - mc
          - net-tools
          - nfs-common
          - nfs-kernel-server
          - prometheus-node-exporter
          - python3
          - python3-docker
          - rsync
          - vim
          - nano
          - transmission-daemon
          - fakeroot
          - samba
          - wsdd2

    - name: Enable services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - docker
        - fail2ban
        - prometheus-node-exporter
#        - syslog-ng@default.service

  roles:
    - { role: andrewrothstein.k3d, become: true }
    - { role: andrewrothstein.kubernetes-helm, become: true }
    - { role: andrewrothstein.kubectl, become: true }

  tasks:
    - name: Journald persist setting
      become: true
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        insertafter: '^[Journal]'
        line: "Storage=persistent"
        owner: root
        group: root
        mode: '0744'
      notify: Journald service restart

    - name: Create /root/bin
      become: true
      ansible.builtin.file:
        path: /root/bin
        state: directory
        mode: "0755"

# DUCKDNS
    - name: Copy duck script
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/duck.sh"
        dest: /root/bin/duck.sh
        owner: root
        group: root
        mode: '0700'

    - name: Duckdns schedule
      become: true
      ansible.builtin.cron:
        name: "Duckdns"
        minute: "*/15"
        job: "bash /root/bin/duck.sh >/dev/null 2>&1"

# SAMBA
    - name: Copy samba config
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/smb.conf"
        dest: /etc/samba/smb.conf
        owner: root
        group: root
        mode: '0770'
      notify:
        - Smb-service-restart
        - Nmb-service-restart

    - name: Add nfs exports
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/exports"
        dest: /etc/exports
        owner: root
        group: root
        mode: '0770'
      notify: Reload nfs exports

    - name: NFS-service
      become: true
      ansible.builtin.service:
        name: nfs-server
        state: started
        enabled: true

# Folders to create
    - name: Create vault group
      become: true
      ansible.builtin.group:
        name: vault
        state: present

    - name: Create directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
        state: directory
      loop:
        - { path: "/storage01", mode: "0777", owner: "root"}
        - { path: "/storage01/calibredb", mode: "0777", owner: "root"}
        - { path: "/storage01/calibreweb", mode: "0777", owner: "root"}
        - { path: "/storage01/calibreweb/books", mode: "0777", owner: "root"}
        - { path: "/storage01/calibreweb/config", mode: "0777", owner: "root"}
        - { path: "/storage01/loki", mode: "0777", owner: "root"}
        - { path: "/storage01/gitlab/storage", mode: "0777", owner: "root"}
        - { path: "/storage02", mode: "0777", owner: "root"}
        - { path: "/storage03", mode: "0777", owner: "root"}
        - { path: "/storage02/torrent/downloaded", mode: "0777", owner: "root"}
        - { path: "/storage02/torrent/incomplette", mode: "0777", owner: "root"}
        - { path: "/storage02/torrent/toDownload", mode: "0777", owner: "root"}
        - { path: "/etc/transmission-daemon", mode: "0775", owner: "debian-transmission"}
        - { path: "/storage03", mode: "0777", owner: "root"}
        - { path: "/storage03", mode: "0777", owner: "root"}
        - { path: "{{ dockercomposerpath }}", mode: "0777", owner: "root"}
        - { path: "/srv/ingress", mode: "0755", owner: "root"}
        - { path: "/srv/mosquitto", mode: "0755", owner: "root"}
        - { path: "/srv/grafana", mode: "0755", owner: "root"}
        - { path: "/srv/prometheus", mode: "0755", owner: "root"}
        - { path: "/srv/proxysetting", mode: "0755", owner: "root"}
        - { path: "/srv/squid", mode: "0755", owner: "root"}
        - { path: "/srv/squid/log", mode: "0777", owner: "root"}
        - { path: "/srv/squid/data", mode: "0777", owner: "root"}
        - { path: "/srv/squid/configsnippet", mode: "0777", owner: "root"}

    - name: Copying files
      become: true
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "root"
        mode: "0755"
      loop:
        - { src: "files/Freya/mosquitto.conf", dest: "/srv/mosquitto/mosquitto.conf" }
        - { src: "files/Freya/passwd.conf", dest: "/srv/mosquitto/passwd.conf" }
        - { src: "files/Freya/alerts.yml", dest: "/srv/prometheus/alerts.yml" }
        - { src: "files/Freya/wpad.dat", dest: "/srv/proxysetting/wpad.dat" }

    - name: Copy prometheus config
      become: true
      ansible.builtin.copy:
        src: files/{{ hostname }}/prometheus.yml
        dest: /srv/prometheus/prometheus.yml
        owner: root
        group: root
        mode: '0775'
      notify: Restart prometheus

#    - name: Copy promtail config
#      become: true
#      ansible.builtin.copy:
#        src: files/{{ hostname }}/promtail.yaml
#        dest: /etc/loki/promtail.yaml
#        owner: promtail
#        group: root
#        mode: '0770'
#      notify: Restart promtail

    - name: Stop transmission-service
      become: true
      ansible.builtin.service:
        name: transmission-daemon
        state: stopped
        enabled: true

#    - name: Set the transmission config dit to /etc
#      become: true
#      ansible.builtin.lineinfile:
#        path: /usr/lib/systemd/system/transmission.service
#        regexp: '^ExecStart'
#        line: ExecStart=/usr/bin/transmission-daemon -f --log-level=info -g /etc/transmission-daemon

    - name: Copy transmission config
      become: true
      ansible.builtin.copy:
        src: files/{{ hostname }}/transsettings.json
        dest: /etc/transmission-daemon/settings.json
        owner: debian-transmission
        group: root
        mode: '0770'
      register: transmissionconfig

    - name: Start transmission-service
      become: true
      ansible.builtin.service:
        name: transmission-daemon
        state: started
        enabled: true
        daemon_reload: true

# XMLDownload

    - name: Root/bin
      become: true
      ansible.builtin.file:
        path: /root/bin
        state: directory
        mode: '0770'
        owner: root

    - name: Get XMLDownload
      become: true
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/szemere/XMLDownload/master/XMLDownload.py
        dest: /root/bin/XMLDownload.py
        mode: '0770'

    - name: XMLDownload schedule zxyxy
      become: true
      ansible.builtin.cron:
        name: "XMLDownload"
        minute: "*/5"
        job: >-
          python3 /root/bin/XMLDownload.py --db /root/XMLDownload.db
          --cache /root/rss.xml
          --file /storage02/torrent/toDownload/
          --rss https://ncore.pro/bookmarks/fcc9f495abbd4b4a10c1ca5d759e8491113707 >/dev/null 2>&1

    - name: XMLDownload schedule default
      become: true
      ansible.builtin.cron:
        name: "XMLDownload def"
        minute: "*/5"
        job: >-
          python3 /root/bin/XMLDownload.py --db /root/XMLDownload_def.db
          --cache /root/rss_def.xml
          --file /storage02/torrent/toDownload/
          --rss https://ncore.pro/bookmarks/fcc9f495abbd4b4a10c1ca5d759e84910 >/dev/null 2>&1

# WSDD2
    - name: WSDD config
      become: true
      ansible.builtin.lineinfile:
        path: /etc/wsdd.conf
        regexp: '^WSDD_PARAMS='
        line: "WSDD_PARAMS=-n freya.int.zxyxy.net -p -H 4"
        mode: '0644'
        create: true
      notify: Wsdd service restart

    - name: Enable services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - smbd
        - nmbd
        - wsdd2

    - name: Add docker compose file
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/docker-compose.yaml"
        dest: "{{ dockercomposerpath }}/docker-compose.yaml"
        owner: root
        group: root
        mode: '0770'
        decrypt: true
      notify: Docker-compose run

    - name: Copying nginx config
      become: true
      ansible.builtin.copy:
        src: "files/Freya/nginxdefault.conf"
        dest: "/srv/ingress/default.conf"
        owner: "root"
        mode: "0755"
      notify: Restart nginx

  handlers:
    - name: Fail2ban service restart
      become: true
      ansible.builtin.service:
        name: fail2ban
        state: restarted
        enabled: true

    - name: Smb-service-restart
      become: true
      ansible.builtin.service:
        name: smb
        state: restarted
        enabled: true

    - name: Nmb-service-restart
      become: true
      ansible.builtin.service:
        name: nmb
        state: restarted
        enabled: true

    - name: Reload nfs exports
      become: true
      ansible.builtin.command:
        cmd: /usr/bin/exportfs -arv
      register: out
      changed_when: out.rc != 0

    - name: Wsdd service restart
      become: true
      ansible.builtin.service:
        name: wsdd2
        state: restarted

    - name: Docker-compose run
      become: true
      ansible.builtin.command: "docker-compose up -d --remove-orphans"
      args:
        chdir: "{{ dockercomposerpath }}"
      register: out
      changed_when: out.rc != 0

    - name: Restart promtail
      become: true
      ansible.builtin.service:
        name: promtail
        state: restarted

    - name: Restart prometheus
      become: true
      ansible.builtin.command: "docker-compose restart -t 10 prometheus"
      args:
        chdir: "{{ dockercomposerpath }}"
      register: out
      changed_when: out.rc != 0

    - name: Restart syslog-ng
      become: true
      ansible.builtin.service:
        name: syslog-ng@default.service
        state: restarted

    - name: Restart nginx
      become: true
      ansible.builtin.command: "docker-compose restart -t 10 nginx"
      args:
        chdir: "{{ dockercomposerpath }}"
      register: out
      changed_when: out.rc != 0

    - name: Journald service restart
      become: true
      ansible.builtin.service:
        name: systemd-journald
        state: restarted

- name: Raspberry base
  hosts:
    - Gateway

  vars:
    dockercomposerpath: /srv/docker

  tasks:
    - name: Create directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
        state: directory
      loop:
        - { path: "/srv/docker", mode: "0755", owner: "root"}
        - { path: "/srv/mosquitto", mode: "0755", owner: "root"}
        - { path: "/srv/proxysetting", mode: "0755", owner: "root"}

    - name: Copying files
      become: true
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "root"
        mode: "0755"
      loop:
        - { src: "files/Freya/mosquitto.conf", dest: "/srv/mosquitto/mosquitto.conf" }
        - { src: "files/Freya/passwd.conf", dest: "/srv/mosquitto/passwd.conf" }
        - { src: "files/Freya/wpad.dat", dest: "/srv/proxysetting/wpad.dat" }

    - name: Add docker compose file
      become: true
      ansible.builtin.copy:
        src: "files/{{ hostname }}/docker-compose.yaml"
        dest: "{{ dockercomposerpath }}/docker-compose.yaml"
        owner: root
        group: root
        mode: '0770'
        decrypt: true
      notify: Docker-compose run


  handlers:
    - name: Fail2ban service restart
      become: true
      ansible.builtin.service:
        name: fail2ban
        state: restarted
        enabled: true

    - name: Reload nfs exports
      become: true
      ansible.builtin.command:
        cmd: /usr/bin/exportfs -arv
      register: out
      changed_when: out.rc != 0

    - name: Docker-compose run
      become: true
      ansible.builtin.command: "docker compose up -d --remove-orphans"
      args:
        chdir: "{{ dockercomposerpath }}"
      register: out
      changed_when: out.rc != 0

    - name: Restart syslog-ng
      become: true
      ansible.builtin.service:
        name: syslog-ng@default.service
        state: restarted

    - name: Restart nginx
      become: true
      ansible.builtin.command: "docker   compose restart -t 10 nginx"
      args:
        chdir: "{{ dockercomposerpath }}"
      register: out
      changed_when: out.rc != 0

    - name: Journald service restart
      become: true
      ansible.builtin.service:
        name: systemd-journald
        state: restarted

- name: Manage vmrouter
  hosts:
    - vmrouter

  pre_tasks:
    - name: Set hostname
      community.routeros.command:
        commands:
          - /system identity set name="{{ inventory_hostname }}"
