version: '3.1'

services:
  nginx:
    image: nginx
    restart: always
    volumes:
      - /srv/ingress:/etc/nginx/conf.d/
      - /root/.acme.sh/*.zxyxyhome.duckdns.org_ecc/:/etc/ssl/certs/nginx/
      - /srv/proxysetting:/srv/proxysetting
    ports:
      - 80:80
      - 443:443


  duckdns:
    image: lscr.io/linuxserver/duckdns:version-b9e2cafd
    container_name: duckdns
    network_mode: host
    environment:
      - SUBDOMAINS=zxyxy
      - TOKEN=bd57877e-769e-44f7-ac6e-8b21916d9308
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:1.32.7
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /storage01/flexconfig:/config
      - /storage01/share/Video/:/Video
      - /storage01/share/Audio/:/Audio
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto:2.0.18
    container_name: mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /srv/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /srv/mosquitto/passwd.conf:/mosquitto/config/passwd.conf

  postgres:
    image: postgres:16.0
    environment:
      - POSTGRES_PASSWORD=postgressecret
      - PGDATA=/data
    volumes:
      - /storage01/srv/postgres:/data
    ports:
      - 5432:5432

  jenkins:
    image: zxyxy/jenkins:v0.8.0
    restart: always
    privileged: true
    volumes:
      - /srv/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 18080:8080
      - 50000:50000
    environment:
      DOCKER_USER: zxyxy
      DOCKER_PASS: dckr_pat_VnfETnlTHORYKnanqf8WMUtVvxE

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoPass41
    volumes:
      - /storage01/mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: .nemmas.
      ME_CONFIG_MONGODB_URL: mongodb://root:MongoPass41@mongo:27017/

  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'

  prometheus:
    image: ubuntu/prometheus:2.46.0-22.04_stable
    container_name: prometheus
    restart: unless-stopped
    ports:
     - '9090:9090'
    volumes:
     - /srv/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
     - /srv/prometheus/alerts.yml:/etc/prometheus/alerts.yml

  calibre:
    image: lscr.io/linuxserver/calibre:4.23.0-v4
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PASSWORD=Calibre4136
      - CLI_ARGS= #optional
    volumes:
      - /storage01/calibredb:/config
    ports:
      - 8080:8080
      - 8181:8181
      - 8081:8081
    restart: unless-stopped

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:0.6.21
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /storage01/calibreweb/config:/config
      - /storage01/calibreweb/books:/books
    ports:
      - 8083:8083
    restart: unless-stopped

  squid:
    image: ubuntu/squid:4.10-20.04_edge
    container_name: squid-proxy
    ports:
      - 3128:3128
    volumes:
      - /srv/squid/log:/var/log/squid
      - /srv/squid/data:/var/spool/squid
      - /srv/squid/configsnippet:/etc/squid/conf.d/snippet.conf

  loki:
    image: grafana/loki:main-46fc0be
    container_name: loki
    ports:
      - 3100:3100
    volumes:
      - /storage01/loki:/loki
    restart: unless-stopped
