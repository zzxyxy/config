---
- name: manage packages
  hosts: localhost
  vars:
    docker_distribution: archlinux
    docker_ansible_requirements: true
  pre_tasks:
    - name: Upgrade system
      become: true
      community.general.pacman:
        update_cache: yes
        upgrade: yes

    - name: Remove packages
      become: true
      pacman:
        name:
          - blueman
          - cabal-fmt
          - cabal-install
          - ghc
          - ghc-static
          - ghc-libs
          - protobuf
          - virtualbox-host-modules-arch
        state: absent
        force: yes

    - name: Install packages
      become: true
      pacman:
        name:
          - ant
          - base-devel
          - boost
          - boost-libs
          - clang
          - docker
          - docker-compose
          - dnsmasq
          - gtk2
          - gperf
          - junit
          - jq
          - kubectx
          - kubens
          - kubectl
          - linux-lts-headers
          - mc
          - mosquitto
          - npm
          - ncurses
          - ntp
          - openssh
          - python-setuptools
          - rust
          - sudo
          - sshfs
          - terraform
          - traceroute
          - jdk11-openjdk
          - tmux
          - screen
          - vim
          - vlc
          - zsh
          - zip
          - wget
        state: present

    - name: Install docker packages
      become: true
      pacman:
        name:
          - bridge-utils
          - containerd
          - docker
          - runc
        state: present

    - name: Enable services
      become: yes
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - docker
        - dnsmasq

  collections:
    - kewlfft.aur
  roles:
  - { role: andrewrothstein.go, become: yes }
  - { role: andrewrothstein.k3d, became: yes }
  - { role: andrewrothstein.k9s, become: yes }
  - { role: andrewrothstein.kubernetes-helm, become: yes }
  - { role: andrewrothstein.kubelogin, become: yes }
  - { role: andrewrothstein.istio, become: yes }
  - { role: andrewrothstein.k3d, became: yes }
#  - { role: buluma.azure_cli, become: yes }

  tasks:
# create aur_builder to install aur packages
    - name: Create the `aur_builder` user
      become: yes
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'

    - name: disable resolv.conf generation
      become: yes
      ansible.builtin.blockinfile:
        path: /etc/wsl.conf
        block: |
          [network]
          generateResolvConf = true
          nameserver 127.0.0.1
          nameserver 172.31.48.1

    - name: Insert/Update addresses to /etc/dnsmasq.conf
      become: yes
      ansible.builtin.blockinfile:
        path: /etc/dnsmasq.conf
        block: |
          address=/z.local/172.21.0.2
      register: dnsmasqchange

    - name: restart dnsmasq
      become: true
      service:
        name: dnsmasq
        state: restarted
        enabled: yes
      when: dnsmasqchange.changed

# kcat-cli
    - name: Install avro-c
      aur:
        name: avro-c
        use: makepkg
        state: present
        ignore_arch: yes
      become: yes
      become_user: aur_builder

    - name: Install aur packages
      aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: yes
      loop:
#        - intellij-idea-ce
        - kcat-cli
      become: yes
      become_user: aur_builder

    - name: Install php82
      aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: yes
      loop:
        - c-client
        - php82
        - php82-cli
        - php82-curl
        - php82-phar
        - php82-pear
        - php82-mysql
        - php82-dba
        - php82-composer
      become: yes
      become_user: aur_builder

    - name: php symlink
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        force: yes
      become: yes
      loop:
        - { src: "/usr/bin/php82", dest: "/usr/bin/php"}
        - { src: "/usr/bin/composer82", dest: "/usr/bin/composer"}

    - name: Install aur packages
      aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: yes
      loop:
        - brave-bin
