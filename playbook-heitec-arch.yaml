---
- name: Manage packages
  hosts: localhost
  vars:
    docker_distribution: archlinux
    docker_ansible_requirements: true
  pre_tasks:
    - name: Upgrade system
      become: true
      community.general.pacman:
        update_cache: true
        upgrade: true

    - name: Remove packages
      become: true
      community.general.pacman:
        name:
          - blueman
          - cabal-fmt
          - cabal-install
          - ghc
          - ghc-static
          - ghc-lib
          - haskel
          - keepass
          - mosquitto
          - protobuf
          - virtualbox-host-modules-arch
          - vlc
        state: absent
        force: true

    - name: Install packages
      become: true
      community.general.pacman:
        name:
          - ant
          - ansible
          - ansible-lint
          - base-devel
          - boost
          - boost-libs
          - clang
          - docker
          - docker-compose
          - dnsmasq
          - gtk2
          - gperf
          - junit
          - jq
          - kubectx
          - kubens
          - kubectl
          - linux-lts-headers
          - mc
          - ninja
          - npm
          - ncurses
          - ntp
          - openssh
          - python
          - python-setuptools
          - python-virtualenv
          - rust
          - sudo
          - sshfs
          - terraform
          - traceroute
          - jdk11-openjdk
          - tmux
          - screen
          - vim
          - zsh
          - zip
          - wget
        state: present

    - name: Install docker packages
      become: true
      community.general.pacman:
        name:
          - bridge-utils
          - containerd
          - docker
          - runc
        state: present


    - name: Create directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
        state: directory
      loop:
        - { path: "/srv/docker", mode: "0777", owner: "root"}

    - name: Enable services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - docker
        - dnsmasq

  roles:
    - { role: andrewrothstein.go, become: true }
    - { role: andrewrothstein.k3d, become: true }
    - { role: andrewrothstein.k9s, become: true }
    - { role: andrewrothstein.kubernetes-helm, become: true }
    - { role: andrewrothstein.kubelogin, become: true }
    - { role: andrewrothstein.istio, become: true }

  tasks:
# create aur_builder to install aur packages
    - name: Create the `aur_builder` user
      become: true
      ansible.builtin.user:
        name: aur_builder
        create_home: true
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: true
        validate: 'visudo -cf %s'
        mode: "0440"

    - name: Disable resolv.conf generation
      become: true
      ansible.builtin.blockinfile:
        path: /etc/wsl.conf
        block: |
          [network]
          generateResolvConf = true
          nameserver 127.0.0.1
          nameserver 172.31.48.1

    - name: Insert/Update addresses to /etc/dnsmasq.conf
      become: true
      ansible.builtin.blockinfile:
        path: /etc/dnsmasq.conf
        block: |
          address=/z.local/172.21.0.2
      notify: Restart dnsmasq

# kcat-cli
    - name: Install avro-c
      kewlfft.aur.aur:
        name: avro-c
        use: makepkg
        state: present
        ignore_arch: true
      become: true
      become_user: aur_builder

    - name: Install aur packages
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: true
      loop:
        - grpcurl-bin
        - kcat-cli
        - paho-mqtt-c
        - paho-mqtt-cpp-git
      become: true
      become_user: aur_builder

    - name: User ameszely
      become: true
      ansible.builtin.user:
        name: ameszely
        group: users
        home: /home/ameszely
        groups: root, bin, docker
        append: true

    - name: Add docker compose file
      become: true
      ansible.builtin.copy:
        src: "files/dmg/docker-compose.yaml"
        dest: /srv/docker
        owner: root
        group: root
        mode: "0770"
        decrypt: true
      register: dockercomposer
      notify: Docker-compose

  handlers:
    - name: Docker-compose
      become: true
      ansible.builtin.command: "docker-compose up -d"
      args:
        chdir: /srv/docker
      changed_when: true

    - name: Restart dnsmasq
      become: true
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
        enabled: true
