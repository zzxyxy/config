---
- name: Manage packages
  hosts: localhost
  vars:
    secret_dir: "{{ lookup('env','SECRET_DIR') }}"
    docker_distribution: archlinux
    docker_ansible_requirements: true
  pre_tasks:
    #    - name: get_vars
    # include_vars:
    #   file: "{{ secret_dir }}/passwds.yml"

    - name: Upgrade system
      become: true
      community.general.pacman:
        update_cache: true
        upgrade: true

    - name: Remove pacman packages
      become: true
      community.general.pacman:
        name:
          - jdk11-openjdk
          - kodi
          - neovim-qt
          - virtualbox
          - virtualbox-host-modules-arch
          - virtualbox-host-dkms
          - vivaldi
        state: absent

    - name: Install pacman packages
      become: true
      community.general.pacman:
        name:
          - android-tools
          - ansible
          - ansible-lint
          - accountsservice
          - arandr
          - avahi
          - avrdude                        # arduino
          - alsa-utils
          - base-devel
          - boost
          - blueman
          - bluez
          - bluez-utils
          - bluez-tools
          - brightnessctl
          - ca-certificates
          - ca-certificates-mozilla
          - caja
          - calibre
          - cdrdao
          - cdrtools
          - chromium
          - cronie
          - cups
          - dfu-programmer                # arduino
          - dmenu
          - docker
          - dvd+rw-tools
          - emacs
          - ethtool
          - fakeroot
          - flake8
          - flameshot
          - filezilla
          - fuse2fs
          - fuse2
          - ghostscript
          - git
          - git-crypt
          - hplip
          - intellij-idea-community-edition
          - imagemagick
          - linux-lts-headers
          - links
          - libreoffice
          - libva
          - libva-mesa-driver             # 3d
          - libva-utils
          - lightdm
          - i3-wm
          - i3status
          - i3lock
          - lightdm-gtk-greeter
          - libmtp
          - man
          - mate-terminal
          - mc
          - mesa                          # 3d
          - mplayer
          - net-tools
          - network-manager-applet
          - nvidia-settings
          - rdesktop
          - remmina
          - shutter
          - sudo
          - syncthing
          - mtpfs
          - k3b
          - keepass
          - kitty
          - sshfs
          - jdk17-openjdk
          - pasystray
          - postfix
          - postgresql-libs
          - protonmail-bridge-core
          - pulseaudio
          - pulseaudio-alsa
          - rust
          - gimp
          - neovim
          - obs-studio
          - texlive-bin
          - texlive-core
          - texlive-langextra
          - texlive-pictures
          - texstudio
          - ttf-nerd-fonts-symbols
          - ttf-nerd-fonts-symbols-common
          - ttf-nerd-fonts-symbols-mono
          - ttf-hack
          - ttf-hack-nerd
          - tigervnc
          - pulseaudio-bluetooth
          - pyright                     # for the python language server
          - python-lsp-server           # for the python language server
          - pavucontrol
          - k3b
          - okular
          - openssh
          - tmux
          - screen
          - xdotool
          - gtk2
          - clang
          - gperf
          - llvm
          - npm
          - python
          - python-attrs
          - python-debugpy
          - python-flake8-black
          - python-flake8-docstrings
          - python-flake8-isort
          - python-pynvim
          - python-packaging
          - python-protobuf
          - python-platformdirs
          - python-grpcio-tools
          - python-paramiko
          - python-pygments
          - python-pylint
          - python-setuptools
          - python-six
          - python-virtualenv
          - qrencode                  # wifi qr generator
          - ncurses
          - ntp
          - boost-libs
          - pulseaudio-bluetooth
          - zip
          - ant
          - junit
          - neovim
          - nfs-utils
          - gvfs
          - gvfs-nfs
          - gvfs-mtp
          - gvfs-smb
          - python-setuptools
          - unixodbc
          - usbutils                  # arduino
          - vim
          - vlc
          - vulkan-intel              # 3d
          - vulkan-tools              # 3d
          - wget
          - zbar                      # qr barcode reader
          - zsh
          - xclip
          - xterm
#          - xorg
#          - xorg-init
          - xf86-video-intel
          - yubikey-manager
          - yubikey-personalization
          - libu2f-server
          - opensc
          - pcsc-tools
        state: latest

    - name: Create directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
        state: directory
      loop:
        - { path: "/etc/autofs", mode: "0755", owner: "root"}

    - name: Install npm packages
      become: true
      community.general.npm:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        global: true
      loop:
        - name: "bash-language-server"
          version: latest
        - name: "pyright"
          version: latest
        - name: "yaml-language-server"
          version: latest

      # ---- AUR packages

    - name: Set MAKEFLAGS in /etc/makepkg.conf
      become: true
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: '^MAKEFLAGS='
        line: 'MAKEFLAGS="-j$(nproc)"'
        state: present
        create: true
        backup: yes

    - name: Create the `aur_builder` user
      become: true
      ansible.builtin.user:
        name: aur_builder
        create_home: true
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: true
        validate: 'visudo -cf %s'
        mode: '0755'

    - name: Disable lid auto suspend
      become: true
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        line: 'HandleLidSwitch=ignore'
      notify: Restart logind

    - name: Install aur packages
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: latest
      loop:
        # - autofs
        - brave-bin
        - noisetorch-bin
        - handbrake-full
        - dbeaver-git
        - pycharm-community-jre
        - python310
        - snapd
        - visual-studio-code-bin
        - xrdp
      become: true
      become_user: aur_builder
      when: aur|default(false)

    - name: Install php82
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: true
      loop:
        - c-client
        - php82
        - php82-cli
        - php82-curl
        - php82-phar
        - php82-pear
        - php82-mysql
        - php82-dba
        - php82-composer
      become: true
      become_user: aur_builder
      when: aur|default(false)

    - name: Php symlink
      ansible.builtin.file:
        src: /usr/bin/php82
        dest: /usr/bin/php
        state: link
      become: true
      when: aur|default(false)

  roles:
    - { role: andrewrothstein.go, become: true }

  tasks:
    - name: Freya storage directorys
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
      loop:
        - /mnt/freya

    - name: Copying files
      become: true
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "root"
        mode: "{{ item.mode }}"
      loop:
        - src: "files/lilith/backlight.rules"
          dest: "/etc/udev/rules.d/backlight.rules"
          mode: "0644"

    - name: Copy /etc/autofs/auto.master
      become: true
      ansible.builtin.copy:
        src: files/lilith/auto.master
        dest: /etc/autofs/auto.master
        mode: '0644'
      notify: Restart autofs

    - name: Copy /etc/autofs/auto.freya
      become: true
      ansible.builtin.copy:
        src: files/lilith/auto.freya
        dest: /etc/autofs/auto.freya
        mode: '0644'
      notify: Restart autofs

    - name: Install Snap packages
      become: true
      community.general.snap:
        name:
          - discord
          - proton-mail
          - proton-pass
          - teams-for-linux
          - thunderbird
          - skype
          - spotify
          - steam

    - name: Enable services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - avahi-daemon
        - bluetooth
        - cups
        - cronie
        - docker
        - NetworkManager
        - ntpd
        - sshd
        - xrdp
        - snapd.socket

    - name: Enable services (aur packages)
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - autofs
      when: aur|default(false)


  handlers:
    - name: Restart autofs
      become: true
      ansible.builtin.service:
        name: autofs
        state: restarted
        enabled: true

    - name: Restart logind
      become: true
      ansible.builtin.service:
        name: systemd-logind
        state: restarted
        enabled: true
