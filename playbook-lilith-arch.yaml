---
- name: Manage packages
  hosts: localhost
  vars:
    secret_dir: "{{ lookup('env','SECRET_DIR') }}"
    docker_distribution: archlinux
    docker_ansible_requirements: true
  pre_tasks:
    #    - name: get_vars
    # include_vars:
    #   file: "{{ secret_dir }}/passwds.yml"

    - name: Upgrade system
      become: true
      community.general.pacman:
        update_cache: true
        upgrade: true

    - name: Remove pacman packages
      become: true
      community.general.pacman:
        name:
          - virtualbox
          - virtualbox-host-modules-arch
          - kodi
          - virtualbox-host-dkms
          - vivaldi
        state: absent

    - name: Install pacman packages
      become: true
      community.general.pacman:
        name:
          - ansible
          - ansible-lint
          - accountsservice
          - arandr
          - avahi
          - alsa-utils
          - base-devel
          - boost
          - blueman
          - bluez
          - bluez-utils
          - bluez-tools
          - brightnessctl
          - ca-certificates
          - ca-certificates-mozilla
          - caja
          - calibre
          - cdrdao
          - cdrtools
          - chromium
          - cronie
          - cups
          - dmenu
          - docker
          - dvd+rw-tools
          - fakeroot
          - flameshot
          - fuse2fs
          - fuse2
          - filezilla
          - linux-lts-headers
          - xf86-video-intel
          - xterm
          - libreoffice
          - lightdm
          - i3-wm
          - i3status
          - lightdm-gtk-greeter
          - libmtp
          - mate-terminal
          - net-tools
          - nvidia-settings
          - rdesktop
          - remmina
          - sudo
          - mc
          - mtpfs
          - k3b
          - keepass
          - sshfs
          - jdk11-openjdk
          - network-manager-applet
          - mplayer
          - pasystray
          - postfix
          - rust
          - texlive-bin
          - texlive-core
          - texlive-langextra
          - texlive-pictures
          - texstudio
          - tigervnc
          - pulseaudio-bluetooth
          - pavucontrol
          - k3b
          - okular
          - openssh
          - tmux
          - screen
          - xdotool
          - gtk2
          - clang
          - gperf
          - llvm
          - npm
          - pipewire
          - python
          - python-attrs
          - python-packaging
          - python-protobuf
          - python-platformdirs
          - python-grpcio-tools
          - python-paramiko
          - python-pygments
          - python-pylint
          - python-setuptools
          - python-six
          - python-virtualenv
          - ncurses
          - ntp
          - boost-libs
          - pulseaudio-bluetooth
          - zip
          - ant
          - junit
          - neovim
          - nfs-utils
          - gvfs
          - gvfs-nfs
          - gvfs-mtp
          - gvfs-smb
          - python-setuptools
          - vim
          - vlc
          - wget
          - zsh
#          - xorg
#          - xorg-init
          - xf86-video-intel
        state: latest

    - name: Create Hack font directory
      become: true
      ansible.builtin.file:
        path: /usr/share/fonts/Hack
        state: directory
        mode: '0755'

    - name: Install hack regular font
      become: true
      ansible.builtin.copy:
        src: files/Hack-Regular.ttf
        dest: /usr/share/fonts/Hack
        force: false
        mode: '0755'

    - name: Install hack bold font
      become: true
      ansible.builtin.copy:
        src: files/Hack-Bold.ttf
        dest: /usr/share/fonts/Hack
        force: false
        mode: '0755'

    - name: Install hack italic font
      become: true
      ansible.builtin.copy:
        src: files/Hack-Italic.ttf
        dest: /usr/share/fonts/Hack
        force: false
        mode: '0755'

    - name: Install hack bold italic font
      become: true
      ansible.builtin.copy:
        src: files/Hack-BoldItalic.ttf
        dest: /usr/share/fonts/Hack
        force: false
        mode: '0755'

      # ---- AUR packages

    - name: Create the `aur_builder` user
      become: true
      ansible.builtin.user:
        name: aur_builder
        create_home: true
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: true
        validate: 'visudo -cf %s'
        mode: '0755'

    - name: Disable lid auto suspend
      become: true
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        line: 'HandleLidSwitch=ignore'
      notify: Restart logind

    - name: Install aur packages
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: latest
      loop:
        - brave-bin
#        - dbeaver-git
        - visual-studio-code-bin
        - xrdp
      become: true
      become_user: aur_builder

    - name: Install php82
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: present
        ignore_arch: true
      loop:
        - c-client
        - php82
        - php82-cli
        - php82-curl
        - php82-phar
        - php82-pear
        - php82-mysql
        - php82-dba
        - php82-composer
      become: true
      become_user: aur_builder

    - name: Php symlink
      ansible.builtin.file:
        src: /usr/bin/php82
        dest: /usr/bin/php
        state: link
      become: true

  roles:
    - { role: andrewrothstein.kubectl, become: true }
    - { role: andrewrothstein.go, become: true }

  tasks:
    - name: Freya storage directorys
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
      loop:
        - /mnt/freya

    - name: Copying files
      become: true
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "root"
        mode: "{{ item.mode }}"
      loop:
        - src: "files/lilith/backlight.rules"
          dest: "/etc/udev/rules.d/backlight.rules"
          mode: "0644"

    - name: Copy /etc/autofs/auto.master
      become: true
      ansible.builtin.copy:
        src: files/lilith/auto.master
        dest: /etc/autofs/auto.master
        mode: '0644'
      notify: Restart autofs

    - name: Copy /etc/autofs/auto.freya
      become: true
      ansible.builtin.copy:
        src: files/lilith/auto.freya
        dest: /etc/autofs/auto.freya
        mode: '0644'
      notify: Restart autofs

    - name: Enable services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - autofs
        - avahi-daemon
        - bluetooth
        - cups
        - cronie
        - docker
        - ntpd
        - sshd
        - xrdp

  handlers:
    - name: Restart autofs
      become: true
      ansible.builtin.service:
        name: autofs
        state: restarted
        enabled: true

    - name: Restart logind
      become: true
      ansible.builtin.service:
        name: systemd-logind
        state: restarted
        enabled: true
